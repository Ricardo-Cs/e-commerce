generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  carts  Cart[]
  orders Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Decimal  @db.Decimal(10, 2)
  stock       Int
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categories ProductCategory[]
  cartItems  CartItem[]
  orderItems OrderItem[]
}

model Category {
  id       Int               @id @default(autoincrement())
  name     String            @unique
  products ProductCategory[]
}

model ProductCategory {
  product_id  Int
  category_id Int
  product     Product  @relation(fields: [product_id], references: [id])
  category    Category @relation(fields: [category_id], references: [id])

  @@id([product_id, category_id])
}

model Cart {
  id         Int        @id @default(autoincrement())
  user_id_fk Int        @unique
  user       User       @relation(fields: [user_id_fk], references: [id])
  items      CartItem[]
  createdAt  DateTime   @default(now())
}

model CartItem {
  id            Int     @id @default(autoincrement())
  cart_id_fk    Int
  product_id_fk Int
  quantity      Int     @default(1)
  cart          Cart    @relation(fields: [cart_id_fk], references: [id])
  product       Product @relation(fields: [product_id_fk], references: [id])
}

model Order {
  id         Int      @id @default(autoincrement())
  user_id_fk Int
  user       User     @relation(fields: [user_id_fk], references: [id])
  status     String   @default("PENDING") // PENDING, PAID, SHIPPED
  total      Decimal  @db.Decimal(10, 2)
  createdAt  DateTime @default(now())

  items   OrderItem[]
  payment Payment?
}

model OrderItem {
  id            Int     @id @default(autoincrement())
  order_id_fk   Int
  product_id_fk Int
  quantity      Int
  price         Decimal @db.Decimal(10, 2)
  order         Order   @relation(fields: [order_id_fk], references: [id])
  product       Product @relation(fields: [product_id_fk], references: [id])
}

model Payment {
  id        Int      @id @default(autoincrement())
  order_id  Int      @unique
  method    String // ex: CARD, PIX, PAYPAL
  status    String   @default("PENDING") // PENDING, CONFIRMED, FAILED
  order     Order    @relation(fields: [order_id], references: [id])
  createdAt DateTime @default(now())
}
